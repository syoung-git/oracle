--WHERER 조건절
SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG';
SELECT FIRST_NAME, JOB_ID FROM EMPLOYEES WHERE FIRST_NAME = 'David';
SELECT * FROM EMPLOYEES WHERE SALARY >= 15000;
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID <> 90; --같지않다
SELECT * FROM EMPLOYEES WHERE HIRE_DATE = '06/03/07'; --날짜비교도 문자열로 한다.
SELECT * FROM EMPLOYEES WHERE HIRE_DATE >= '06/03/01'; --날짜 대소비교 가능

--BETWEEN AND 연산자 : ~사이에 (이상 AND 이하)
SELECT * FROM EMPLOYEES WHERE SALARY BETWEEN 5000 AND 10000;
SELECT * FROM EMPLOYEES WHERE HIRE_DATE BETWEEN '03/01/01' AND '03/12/31';

--IN연산자
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID IN(50,60,70);
SELECT * FROM EMPLOYEES WHERE JOB_ID IN ('IT_PROG', 'ST_MAN');

--LIKE연산자 : 검색에 사용됨, 리터럴 문자 % _
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '03%';
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '%03';
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '%03%';
SELECT * FROM EMPLOYEES WHERE JOB_ID LIKE '%MAN%';

SELECT * FROM EMPLOYEES WHERE FIRST_NAME LIKE '_a%';

--NULL값 찾기 IS NULL, IS NOT NULL
SELECT * FROM EMPLOYEES WHERE COMMISSION_PCT IS NULL;
SELECT * FROM EMPLOYEES WHERE COMMISSION_PCT IS NOT NULL;

--AND, OR (AND가 OR보다 우선순위)
SELECT * FROM EMPLOYEES WHERE JOB_ID IN ('IT_PROG','FI_MGR');
SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' OR JOB_ID = 'FI_MGR';
SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' OR SALARY >= 5000;
SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' AND SALARY >= 5000;

SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' OR JOB_ID = 'FImGR' AND SALARY >= 6000;
SELECT * FROM EMPLOYEES WHERE (JOB_ID = 'IT_PROG' OR JOB_ID = 'FI_MGR') AND SALARY >= 6000;

--NOT 부정 : 연산키워드와 사용 됨
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID NOT IN (50,60);
SELECT * FROM EMPLOYEES WHERE JOB_ID NOT LIKE '%MAN%'; 

----------------------------------------------------------------
--ORDER BY
SELECT * FROM EMPLOYEES ORDER BY SALARY ASC; --아무것도 안적으면 ASC
SELECT * FROM EMPLOYEES ORDER BY DEPARTMENT_ID DESC; --내림차순

SELECT FIRST_NAME, SALARY*12 AS 연봉 FROM EMPLOYEES ORDER BY 연봉; --별칭을 ORDER절에서 사용가능
--정렬을 2개 이상 시킬 수 있음 
--부서 번호가 높은 사람들 중 급여가 높은 사람들 기준으로 정렬
SELECT * FROM EMPLOYEES ORDER BY DEPARTMENT_ID DESC, SALARY DESC;

SELECT * FROM EMPLOYEES WHERE JOB_ID IN('IT_PROG','SA_MAN') ORDER BY FIRST_NAME ASC;












